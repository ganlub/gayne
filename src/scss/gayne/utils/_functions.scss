@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

@function rem($px, $base-value: $rem-base) {
  @if not unitless($px) {
    $px: strip-units($px);
  }

  @if not unitless($base-value) {
    $base-value: strip-units($base-value);
  }
  @return ($px / $base-value) * 1rem;
}

@function em($px) {
  @if not unitless($px) {
    $px: strip-units($px);
  }
  $base-value: $rem-base;
  @if not unitless($base-value) {
    $base-value: strip-units($base-value);
  }
  @return ($px / $base-value) * 1em;
}

// RANGES
// We use these functions to define ranges for various things, like media queries.
@function lower-bound($range) {
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range, 1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

// Name the next breakpoint, or null if last.
@function breakpoint-next($name, $breakpoints: $breakpoint-sizes, $breakpoint-names: map-keys($breakpoints)) {
  $index: index($breakpoint-names, $name);
  @return if($index < length($breakpoint-names), nth($breakpoint-names, $index + 1), null);
}

// Minimum breakpoint width. Null for the smallest 
@function breakpoint-min($name, $breakpoints: $breakpoint-sizes) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}
